name: CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  AWS_REGION: us-east-1
  APP_NAME: 2pullapp-admin
  # Specify the manually created S3 bucket name here
  S3_BUCKET_NAME: amplify-2pullappadmin-bucket

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest
          run_install: false

      - name: Install dependencies
        run: pnpm install

      - name: Build Admin
        run: pnpm run build:admin

      - name: Lint Admin
        run: pnpm run lint:admin

      # Upload the entire admin directory
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: admin-dist
          path: |
            apps/admin/.next/
            apps/admin/public/
            apps/admin/package.json
          if-no-files-found: error

  create-and-deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: admin-dist
          path: apps/admin

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create or Update Amplify App
        id: create-app
        run: |
          # Check if app exists
          APP_ID=$(aws amplify list-apps --query "apps[?name=='${{ env.APP_NAME }}'].appId" --output text)
          
          if [ -z "$APP_ID" ]; then
            # Create new app if it doesn't exist
            echo "Creating new Amplify app..."
            RESPONSE=$(aws amplify create-app --name ${{ env.APP_NAME }} \
              --platform WEB \
              --custom-rules '[
                {"source": "/<*>","target": "/index.html","status": "200"},
                {"source": "/<*>","target": "/index.html","status": "404"}
              ]')
            APP_ID=$(echo $RESPONSE | jq -r '.app.appId')
            
            # Create branch
            aws amplify create-branch --app-id $APP_ID --branch-name main \
              --framework "Next.js - SSR" \
              --stage PRODUCTION
          fi
          
          echo "AMPLIFY_APP_ID=$APP_ID" >> $GITHUB_ENV
          echo "appId=$APP_ID" >> $GITHUB_OUTPUT

      - name: Create amplify.yml
        run: |
          cat << EOF > amplify.yml
          version: 1
          applications:
            - frontend:
                phases:
                  preBuild:
                    commands:
                      - npm install -g pnpm
                      - pnpm install
                  build:
                    commands:
                      - pnpm run build:admin
                artifacts:
                  baseDirectory: apps/admin/.next
                  files:
                    - '**/*'
                cache:
                  paths:
                    - node_modules/**/*
                    - .next/cache/**/*
          EOF

      - name: Deploy to AWS Amplify
        run: |
          # Create the deployment package
          cd apps/admin
          zip -r ../../deployment.zip .next/* public/* package.json
          cd ../../

          # Upload the amplify.yml to the manually created S3 bucket
          aws s3 cp amplify.yml s3://${{ env.S3_BUCKET_NAME }}/amplify.yml

          # Start the deployment
          aws amplify start-deployment \
            --app-id ${AMPLIFY_APP_ID} \
            --branch-name main \
            --zip-file fileb://deployment.zip

      - name: Output Amplify App URL
        run: |
          DOMAIN=$(aws amplify get-app --app-id ${{ env.AMPLIFY_APP_ID }} --query 'app.defaultDomain' --output text)
          echo "Your app will be available at: https://main.$DOMAIN"
